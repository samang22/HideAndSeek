250324
자체 서버 프로젝트 완료 

250325
자체 서버 미비 사항 보완
UE 프로젝트 생성
UE 프로젝트에 Network Plugin 설치

250326
자체 서버 <-> 언리얼 클라 패킷 송수신
패킷 수신 쓰레드로 처리 
언리얼 채팅 UI 추가중

////////////////////////////////////////////////

클라이언트에서 
    APawn* ControlledPawn = GetPawn();
    ControlledPawn->AddMovementInput(ForwardVector, ActionValue.X);
    ControlledPawn->AddMovementInput(RightVector, ActionValue.Y);
이런 식으로 움직이니까 움직임이 뚝뚝 끊겨서 진행됨
연산을 서버에서 진행하고, 클라에 Multicast로 연결?

MultiCast는 실시간으로 계속 움직이는 캐릭터의 패킷을 처리하기에는 과부하가 발생하기에 적합한 방법이 아님

문제 원인:
CharacterMovementComponent의 MaxWalkSpeed가 서버와 클라이언트 간 다르게 설정되어 있어 서버에서 보정이 일어날 때 움직임이 튀거나 떨리는 현상 발생

해결 방법:
MaxWalkSpeed 값을 Replicated 변수로 서버-클라이언트 간 동기화해서, 클라이언트가 서버 기준의 이동 속도로 정확하게 움직이도록 만듦

//////////////////////////////////////////////////////////////////////////////////////////////////////////

Pawn이 아닌 액터는 AISenseConfig에 잡히지 않는다.
UAIPerceptionComponent::ProcessStimuli
기본적으로 TArray<FStimulusToProcess> StimuliToProcess; 에 있는 구조체에 대하여 검사 실시
FStimulusToProcess는? 
		TObjectKey<AActor> Source;
		FAIStimulus Stimulus;
        이렇게 구성
        FAIStimulus는? AI Perception 시스템을 통해 감지된 정보(Stimulus)를 담는 구조체

그럼 일단 StimuliToProcess에 직접 액터를 기입? 
이건 내부적으로 작동하는 코드이고, 외부에서 수정해서 쓰라고 만든 API가 아님
기본적으로 이 프로젝트는 언리얼 엔진 내부 코드를 수정해서 만드는 프로젝트가 아니므로, 수정할 경우 발생할 버그에 대해 무지함. 지양해야됨

AEgg에 UAIPerceptionStimuliSourceComponent를 추가?
일단 안됨

		StimuliSource->RegisterForSense(TSubclassOf<UAISense_Sight>(UAISense_Sight::StaticClass()));
		StimuliSource->RegisterWithPerceptionSystem();
        이 두 함수를 BeginPlay에서 호출하는 것으로 해결

/////////////////////////////////////////////////////////////////////////////////////////////////////////////

같은 BehaviorTree를 사용하는 Pawn들이 한번에 같은 Task를 실행
블랙보드 컴포넌트를 인스턴스화 시켜 해결


///////////////////////////////////////////////////////////////

사망한 플레이어를 관전자로 변경할 때, 

        // 플레이어 상태를 관전자로 변경
        PlayerController->ChangeState(NAME_Spectating);
        // 관전자 Pawn을 플레이어 컨트롤러가 소유하도록 설정
        PlayerController->Possess(SpectatorPawn);

이 순서로 해야된다. 
ChangeState에서 기존 Pawn을 삭제시키기 때문..
